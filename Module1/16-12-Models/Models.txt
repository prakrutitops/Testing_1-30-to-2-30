Dev => Developer's task
QA => Quality Assurance
QC => Quality Control
UAT=> User Acceptance Testing
Prod => Production

Models or Methodologies

1)Waterfall Model

When to use

-> Waterfall Model is Used for short term project
-> We can use this model when requirements are fixed
-> We can use this model when project requirements are not ambiguous
-> We can use this Model if Project Requirement is very well documented, clear and fixed
-> Technology is understood and is not dynamic.
-> Product definition is stable.


Pros
-> Simple and easy to understand and use
-> Easy to manage due to the rigidity
-> Easy to arrange tasks.
-> Phases are processed and completed one at a time.


Cons
-> High amounts of risk and uncertainty.
-> Not a good model for complex and object-oriented projects.
-> No working software is produced until late during the life cycle.
-> It is difficult to measure progress within stages.



2)Iterative Model:

-> In This Model Major Requirements are fixed
-> Parallel Development can be possible
-> A new technology is being used and is being learnt


Pros:
-> Parallel development can be planned.
-> Some working functionality can be developed quickly
-> Results are obtained early and periodically
-> Less costly
-> each iteration is an easily managed milestone.

Cons:
-> More resources may be required.
-> Although cost of change is lesser but it is not very suitable for changing
requirements.
-> Not suitable for smaller projects.
-> Management complexity is more

3)Spiral Model:

Author name: Bohem

Stages 

1)Planning
2)Risk Analysis
3)Engineering
4)Customer Evaluation

-> Spiral Model is very widely used
-> When costs there are a budget constraint and risk evaluation is important.
-> For medium to high-risk projects
-> Long Term Project
-> Customer is not sure of their requirements
-> New product line which should be released in phases to get enough customer feedback.


Pros:
-> Changing requirements can be accommodated.
-> Users see the system early.
-> Development can be divided into smaller parts 

Cons:
-> Management is more complex.
-> End of project may not be known early.
-> Not suitable for small or low risk projects
-> Process is complex
-> Spiral may go indefinitely.

4) Agile Model:

-> Agile Model is combination of iterative and incremental model
-> Each iteration typically lasts from about one to three weeks.
-> Agile Methods break the product into small incremental builds.
-> At the end of the iteration a working product is displayed to the customer 
-> There is no deadline for project completion

Pros:
-> Is a very realistic approach to software development
-> Promotes teamwork and cross training.
-> Functionality can be developed rapidly
-> Suitable for fixed or changing requirements
-> Little or no planning required
-> Easy to manage
-> Gives flexibility to developers 


Cons:
-> Not suitable for handling complex dependencies.
-> Strict delivery management dictates
-> Transfer of technology to new team members
